@model MovilShopStock.Models.View.BusinessInvitationModel
@{
    ViewBag.Title = "Invitación a Negocio " + Model.Business.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.AlreadySubscribed)
{
    <p>
        Usted ya pertenece al negocio @Model.Business.Name. Por favor, presione el siguiente botón para ir al negocio.
    </p>
    @Html.ActionLink("Ir a " + Model.Business.Name, "SetBusiness", "Home", routeValues: new { id = Model.Business.DT_RowId, returnUrl = "/" }, htmlAttributes: new { @class = "btn btn-primary" })

}
else
{
    <h2>Invitación a Negocio @Model.Business.Name</h2>
    <p>
        @Model.Owner.UserName le ha invitado para pertenecer a su negocio.
    </p>
    if (User.Identity.IsAuthenticated)
    {
        <p>Por favor, presione el siguiente botón para aceptar la invitación</p>
        using (Html.BeginForm("AcceptInvitation", "Business", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="BusinessId" value="@Model.Business.DT_RowId" />
            <input type="hidden" name="RoleId" value="@Model.Role.Id" />

            <button type="submit" class="btn btn-primary">Aceptar Invitación</button>
        }
    }
    else if (Model.AlreadySystem)
    {
        <p>
            Necesita entrar con su cuenta @Model.Email para poder aceptar la invitación. Por favor, presione el siguiente botón para seguir
        </p>
        @Html.ActionLink("Entrar", "Login", "Account", routeValues: new { returnUrl = Request.Url.AbsoluteUri }, htmlAttributes: new { @class = "btn btn-primary" })
    }
    else
    {
        <p>Complete el formulario de registro para aceptar la invitación</p>
        using (Html.BeginForm("AcceptRegisterInvitation", "Business", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <input type="hidden" name="BusinessId" value="@Model.Business.DT_RowId" />
            <input type="hidden" name="OwnerId" value="@Model.Owner.Id" />
            <input type="hidden" name="RoleId" value="@Model.Role.Id" />
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control disabled", @readonly = true })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <button type="submit" class="btn btn-primary ml-3">Aceptar Invitación</button>
        }
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}