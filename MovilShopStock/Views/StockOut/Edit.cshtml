@model MovilShopStock.Models.StockOutModel

@{
    ViewBag.Title = "Editar Salida";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Salida</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DT_RowId)

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category", new SelectList(ViewBag.Categories, "Id", "Name", Model.Category), new { @class = "custom-select form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductName", Enumerable.Empty<SelectListItem>(), new { @class = "custom-select form-control" })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-dark" />
                @if (!Model.Receivered)
                {
                    @Html.ActionLink("Eliminar", "Delete", new { id = Model.Id }, new { @class = "btn btn-danger" })
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#Category").on("change", function () {
                load_product();
            });
            load_product = function () {
                $.ajax({
                    type: 'POST',
                    data: {
                        category_id: $("#Category").val()
                    },
                    url: "/Home/GetProductByCat",
                    dataType: 'json',
                    success: function (data) {
                        $('#ProductName')
                            .find('option')
                            .remove()
                            .end();
                        $.each(data,
                            function (l, prod) {
                                var option_prod = new Option(prod.Product, prod.Id, true, prod.Id=='@(Model.ProductName)');
                                $("#ProductName").append(option_prod);
                            });
                        $("#ProductName").trigger('change');
                    }
                });
            };

            load_product();
        });
    </script>
}